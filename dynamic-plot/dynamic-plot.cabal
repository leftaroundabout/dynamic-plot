Name:                dynamic-plot
Version:             0.4.2.0
Category:            graphics
Synopsis:            Interactive plots / diagrams
Description:         Haskell excels at handling data like continuous functions
                     in a nice way, i.e. without discretising anything to finite arrays as
                     is typically done in languages like Matlab. Instead, you can simply pass
                     around functions or infinite data structures (or /very/ high-resolution data
                     that would be infeasible to handle in a strict language).
                     .
                     However when you want to /view/ the data, it will eventually need to be exported out of Haskell
                     in some finite form. The purpose of this library is to delay this discretisation
                     as long as possible: it implements an interactive plotting window that accepts continuous/recursive
                     data and only &#x201c;flattens&#x201d; it according to the specific view configuration.
                     You can then zoom in to a shown diagram and it will automatically calculate
                     the features more detailedly, or zoom out and discover previosly unexpected
                     features. You don't need to worry about specifying the range and/or resolution beforehand:
                     the program will try to find a suitable default view based on /all/ data you're displaying,
                     and you can always still zoom, resize or move later.
                     .
                     <http://projects.haskell.org/diagrams> are used as the &#x201c;pre-rendered&#x201d; type. This
                     makes the output usable in a very wide range of applications, though at the moment only the GTK
                     window view is implemented.
License:             GPL-3
License-file:        COPYING
Author:              Justus SagemÃ¼ller
Maintainer:          (@) jsag $ hvl.no
Homepage:            https://github.com/leftaroundabout/dynamic-plot
Build-Type:          Simple
Cabal-Version:       1.18
Extra-Doc-Files:     images/examples/*.png
                     , images/examples/*.gif

Source-Repository head
    type: git
    location: git://github.com/leftaroundabout/dynamic-plot.git

flag use-gi-cairo
    description: Whether to use the preferred GObject-introspection version of the Cairo library, instead of legacy gtk2hs-based one.
    default: False

Library
  Build-Depends:     base>=4.5 && <6
                     , transformers
                     , mtl
                     , vector-space>=0.8
                     , MemoTrie
                     , vector
                     , tagged
                     , containers
                     , semigroups
                     , data-default
                     , random, random-fu >=0.2 && <0.4, rvar >=0.2 && <0.4
                     , time
                     , deepseq
                     , constrained-categories >= 0.2
                     , free-vector-spaces >= 0.1 && < 0.3
                     , linearmap-category >=0.3.5
                     , diagrams-core
                     , diagrams-lib >= 1.3 && < 1.5
                     , colour >= 2 && < 3
                     , manifolds >= 0.4.2 && < 0.7
                     , manifold-random
                     , colour-space >=0.2
                     , JuicyPixels > 3 && < 4
                     , lens < 6.0
  if flag(use-gi-cairo)
       Build-Depends: diagrams-gi-cairo
  else
       Build-Depends: diagrams-cairo
  Other-Extensions:  FlexibleInstances
                     , TypeFamilies
                     , FlexibleContexts
                     , GADTs
                     , RankNTypes
                     , ConstraintKinds
                     , PatternGuards
                     , ScopedTypeVariables
                     , RecordWildCards
                     , TupleSections
  ghc-options:       -O2
  default-language:  Haskell2010
  Exposed-modules:   Graphics.Dynamic.Plot.R2
                     Graphics.Dynamic.Plot.Internals
  Other-modules:     Graphics.Dynamic.Plot.R2.Internal
                     Graphics.Dynamic.Plot.Colour
                     Graphics.Dynamic.Plot.Internal.Types
                     Graphics.Text.Annotation
                     Graphics.Image.Resample
